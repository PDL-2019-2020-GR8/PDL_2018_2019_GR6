Data types,Java,C#
Arbitrary-size decimals,<ref></ref>,<ref></ref>
Arbitrary-size integers,[empty],<ref name="microsoft1"></ref>
Arrays,<ref></ref>,[added]
Boolean type,[empty],[added]
Character,<ref></ref>,[added]
Complex numbers,<ref></ref>,[added]
Date/time,; reference type<ref></ref>,; value type
Enumerated types,; reference type,; scalar
High-precision decimal number,; but see 'Arbitrary-size decimals' above,</ref>}}
IEEE 754 binary32 floating point number,[empty],[added]
IEEE 754 binary64 floating point number,[empty],[added]
Lifted (nullable) types,; but wrapper types,[added]
Pointers,;<ref name="oracle.com"></ref> only method references<ref name="oracle1"></ref>,<ref>Only available in unsafe mode or through IntPtr managed type</ref>
Reference types,[empty],[added]
Signed integers,; 8  16  32  64 bits,; 8  16  32  64 bits
Strings,[empty],[added]
Type annotations,[empty],[added]
Single-root (unified) type system,; but wrapper types,<ref>The type system is unified by default  unless the compiler is switched into unsafe mode where raw pointers are available as a datatype. Pointers are not derived from object nor does it have implicit conversions to/from the object data type</ref>
Tuples,; limited 3rd party available.<ref></ref>,<ref name="Tuple Class in C#"></ref>
Unsigned integers,; but some method support.<ref></ref>,; 8  16  32  64 bits
Value types,; only primitive types,[added]
[empty],Java,C#
Definition,In Java  the enumeration type is a class  and its values are objects (instances) of that class. The only valid values are the ones listed in the enumeration. The enumeration type may declare fields  allowing each individual enumerated value to reference additional data associated uniquely with that specific value. The enumeration type may also declare or override methods  or implement interfaces.<ref name="enum"></ref>,Enumerations in C# are implicitly derived from the <kbd>Enum</kbd> type that again is a value type derivative. The value set of a C# enumeration is defined by the underlying type that can be a signed or unsigned integer type of 8  16  32 or 64 bits. The enumeration definition defines names for the selected integer values.<ref name="enum"/><ref></ref> By default the first name is assigned the value 0 (zero) and the following names are assigned in increments of 1. Any value of the underlying primitive type is a valid value of the enumeration type  though an explicit cast may be needed to assign it.
Combining,Java enumeration set and map collections provide functionality to combine multiple enumeration values to a combined value. These special collections allows compiler optimization to minimize the overhead incurred by using collections as the combination mechanism.,C# supports bit-mapped enumerations where an actual value may be a combination of enumerated values bitwise or'ed together. The formatting and parsing methods implicitly defined by the type will attempt to use these values.
Reference types,Java,C#
Garbage collection,[empty],[added]
Weak references,[empty],[added]
Reference queue (interaction with garbage collection),[empty],[added]
Soft references,[empty],[added]
Phantom references,[empty],[added]
Proxy support,; proxy generation,; object contexts
Arrays and Collections,Java,C#
Abstract data types,[empty],[added]
One-dimensional  zero-based index arrays,[empty],[added]
Multidimensional arrays  rectangular (single array),[empty],[added]
Multidimensional arrays  jagged (arrays of arrays),[empty],[added]
Non-zero based arrays,[empty],[added]
Unified arrays and collections,[empty],[added]
Maps/dictionaries,[empty],[added]
Sorted dictionaries,[empty],<ref></ref>
Sets,[empty],[added]
Sorted sets,[empty],<ref></ref>
Lists/vectors,[empty],[added]
Queues/stacks,[empty],[added]
Priority queue,[empty],<ref></ref><ref></ref>
Bags/multisets,[empty],[added]
Concurrency optimized collections,[empty],<ref></ref>
